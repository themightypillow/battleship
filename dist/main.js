(()=>{"use strict";const e=e=>{const t=Array.from(Array(e),(()=>!1));return{hit:e=>{if(t[e])throw new Error("Ship already hit here");return t[e]=!0,!0},isSunk:()=>t.every((e=>!0===e))}},t=(t,r)=>{let o=[];for(let e=0;e<t;e++){o[e]=[];for(let t=0;t<r;t++)o[e][t]={attacked:!1,ship:null}}const n=[];return{place:(t,r,a,s)=>{if(t!==a&&r!==s)throw new Error("Cannot place diagonal ship");if(t!==a){const s=Math.min(t,a),c=Math.max(t,a),l=e(c-s+1),d=o.slice(0);for(let e=s,t=0;e<=c;e++,t++){if(d[e][r].ship)throw new Error("Ship overlaps with another");d[e][r].ship=l,d[e][r].index=t}o=d,n.push(l)}else if(r!==s){const a=Math.min(r,s),c=Math.max(r,s),l=e(c-a+1),d=o.slice(0);for(let e=a,r=0;e<=c;e++,r++){if(d[t][e].ship)throw new Error("Ship overlaps with another");d[t][e].ship=l,d[t][e].index=r}o=d,n.push(l)}else{if(o[t][r].ship)throw new Error("Ship overlaps with another");const a=e(1);o[t][r].ship=a,o[t][r].index=0,n.push(a)}return!0},receiveAttack:(e,t)=>{if(o[e][t].attacked)throw new Error("Space already attacked");return o[e][t].attacked=!0,!!o[e][t].ship&&(o[e][t].ship.hit(o[e][t].index),!0)},haveAllSunk:()=>n.every((e=>e.isSunk())),get:()=>o.map((e=>e.map((e=>({attacked:e.attacked,ship:!!e.ship})))))}},r=(e,t,r)=>{const o=r?[]:(()=>{const e=[];for(let r=0;r<t;r++)for(let o=0;o<t;o++)e.splice(Math.floor(Math.random()*e.length),0,{row:r,column:o});return e})(),n=(e,r)=>{const o=[];return e-1>=0&&o.push({row:e-1,column:r}),r+1<=t&&o.push({row:e,column:r+1}),e+1<=t&&o.push({row:e+1,column:r}),r-1>=0&&o.push({row:e,column:r-1}),o};return{play:(a,s)=>{if(r){if(a>=t||s>=t)throw new Error("Space out of bounds");return{row:a,column:s,hit:e.receiveAttack(a,s)}}{let t=o.shift();if(!t)throw new Error("All spaces attacked");let r=!1;for(;!r;)try{const a=e.receiveAttack(t.row,t.column);r=!0,t.hit=a,a&&o.unshift(...n(t.row,t.column))}catch(e){if(t=o.shift(),!t)throw new Error("All spaces attacked")}return t}}}},o=[{startRow:4,startColumn:2,endRow:8,endColumn:2},{startRow:1,startColumn:1,endRow:1,endColumn:4},{startRow:4,startColumn:6,endRow:4,endColumn:8},{startRow:7,startColumn:7,endRow:9,endColumn:7},{startRow:6,startColumn:0,endRow:7,endColumn:0}],n=(()=>{const e=t(10,10),n=t(10,10),a=r(n,10,!0),s=r(e,10,!1);return{placeShips:t=>{t.forEach((t=>e.place(t.startRow,t.startColumn,t.endRow,t.endColumn))),o.forEach((e=>n.place(e.startRow,e.startColumn,e.endRow,e.endColumn)))},makeUserTurn:(e,t)=>({hit:a.play(e,t).hit,win:n.haveAllSunk()}),makeCPUTurn:()=>({...s.play(),win:e.haveAllSunk()})}})();(()=>{document.querySelectorAll(".board").forEach(((e,t)=>{for(let r=0;r<10;r++){const o=document.createElement("div");o.textContent=r+1,o.classList.add("board-label"),e.appendChild(o);for(let o=0;o<10;o++){const n=document.createElement("div");n.classList.add(0===t?"user":"computer"),n.classList.add("space"),n.dataset.row=r,n.dataset.column=o,n.style.gridArea=`${r+2} / ${o+2}`,e.appendChild(n)}}}));const e=document.querySelector(".battleship").cloneNode(!0);e.style.gridArea="2 / 2 / span 1 / span 4",document.querySelector("#user-section .board").appendChild(e);const t=document.querySelector(".destroyer").cloneNode(!0);t.style.gridArea="4 / 4 / span 1 / span 3",document.querySelector("#user-section .board").appendChild(t);const r=document.querySelector(".cruiser").cloneNode(!0);r.style.gridArea="6 / 7 / span 1 / span 2",document.querySelector("#user-section .board").appendChild(r);const o=document.querySelector(".carrier").cloneNode(!0);o.style.gridArea="8 / 4 / span 1 / span 5",document.querySelector("#user-section .board").appendChild(o);const a=document.querySelector(".submarine").cloneNode(!0);a.style.gridArea="10 / 7 / span 1 / span 3",document.querySelector("#user-section .board").appendChild(a);const s=[{startRow:6,startColumn:2,endRow:6,endColumn:6},{startRow:0,startColumn:0,endRow:0,endColumn:3},{startRow:2,startColumn:2,endRow:2,endColumn:4},{startRow:8,startColumn:5,endRow:8,endColumn:7},{startRow:4,startColumn:5,endRow:4,endColumn:6}],c=document.querySelector(".dot").cloneNode();c.classList.replace("dark-grey","darker-grey");const l=c.cloneNode();l.classList.replace("darker-grey","red");const d=c.cloneNode();d.classList.replace("darker-grey","blue");const i=document.querySelector("#computer-section"),u=document.querySelector("#info"),p=e=>new Promise((t=>setTimeout(t,e)));u.addEventListener("click",(e=>{n.placeShips(s),e.target.classList.remove("green"),e.target.classList.add("darker-grey"),e.target.textContent="Attack Your Opponent",i.style.pointerEvents="auto"})),document.querySelectorAll(".computer.space").forEach((e=>{e.addEventListener("click",(e=>{!async function(e){await p(2e3),u.classList.replace(e?"red":"slate","darker-grey"),u.textContent="Opponent is Attacking";const t=n.makeCPUTurn(),r=document.querySelector(`.user.space[data-row='${t.row}'][data-column='${t.column}']`);await p(2e3),r.appendChild(t.hit?l.cloneNode():d.cloneNode()),u.classList.replace("darker-grey",t.hit?"red":"slate"),u.textContent=`Opponent's attack is a ${t.hit?"hit":"miss"}!`,await p(2e3),u.classList.replace(t.hit?"red":"slate","darker-grey"),u.textContent="Attack Your Opponent",i.style.pointerEvents="auto"}(function(e){i.style.pointerEvents="none";const t=n.makeUserTurn(e.dataset.row,e.dataset.column);return e.appendChild(t.hit?l.cloneNode():c.cloneNode()),u.classList.replace("darker-grey",t.hit?"red":"slate"),u.textContent=`Your attack is a ${t.hit?"hit":"miss"}!`,t.hit}(e.target))}))}))})()})();